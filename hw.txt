1. представим, что у нас есть данные, которые мы очень часто читаем по сравнению с другими(например словарь стран). 
Как можно это оптимизировать?
для нормального ответа, мне кажется тут недостаточно информации. Во-первых я не совсем понимю, что предлагается оптимизировать, так как 
в первом утверждении не указано в чем проблема, на каком она уровне. Также непонятно, насколько чтение списка стран влияет на общую 
производительность (скорее особенно не влияет), то есть насколько оптимизация оправдана. 
Ну и кроме того оптимизировать можно относительно того, как это работает сейчас, а это тоже неизвестно. 
В общем, если данные по сути константные изначально я бы наверное сделал модуль, который отдавал этот список в виде объекта, и подключал этот модуль там 
где это необходимо. Но вожможно я неправильно понял что вы имеете в виду.

2 Что можно сделать, если таблица вакансий стала слишком большой? Какие есть решения на уровне текущей базы данных? 
Можно ли ее чем то заменить?

Наверное можно разделить таблицу вертикально и связать one-to-one. Соответственно каждую половину можно положить на отдельную машину. Производительность разумеется пострадает. 
А вообще, насколько я понимаю, существуют распределенные базы данных, предназначенные как раз для таких ситуаций.

3, Какие вы видите узкие места, 
возможно неправильно выбранные технологии в текущей схеме(можно рассмотреть как “нашу” схему, так и схему настоящего hh.ru)

Единственное, что мне на схеме "режет глаз" это logic и jlogic. Может стот всю логику объединить в одном месте.
